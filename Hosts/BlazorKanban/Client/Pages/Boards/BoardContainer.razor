@attribute [Authorize]
@page "/board/{BoardId}"
@inject HttpClient Http
@using BlazorKanban.Client.Pages.Columns

@if (board == null)
{
    <Loading />
}
else
{
    <div class="mx-5 my-3">
        <div class="mat-elevation-z24">
            <div class="px-5 py-3">
                <MatHeadline3>@board.Title</MatHeadline3>
                <MatSubtitle2>@board.Description</MatSubtitle2>
            </div>
        </div>
    </div>

    <div class="mat-layout-grid">
        <div class="mat-layout-grid-inner row flex-row flex-sm-nowrap">
            @foreach (var column in board.Columns)
            {
                <div class="mat-layout-grid-cell mat-layout-grid-cell-span-3">
                    <CascadingValue Value="column">
                        <ColumnContainer @key="column" Class="column-block item-boundaries" />
                    </CascadingValue>

                    @*<ColumnContainer Column="column" Class="column-block item-boundaries" />*@
                </div>
            }
            <div class="mat-layout-grid-cell mat-layout-grid-cell-span-3">
                <MatButton Outlined="true" Dense="true" Icon="@MatIconNames.View_column" Class="column-block item-boundaries" OnClick="AddColumn">&nbsp; Add Column</MatButton>
            </div>
        </div>
    </div>
}

@code {
    private Board board;

    [Parameter]
    public string BoardId { get; set; }

    protected override async Task OnInitializedAsync()
    {
        board = await Http.GetFromJsonAsync<Board>($"api/taskboards/{BoardId}");

        //board = await Http.GetFromJsonAsync<Board>("api/taskboards/5f2c15d77a65952d71665819");
    }

    private void AddColumn()
    {
        // Update the card with the new column id
    }
}