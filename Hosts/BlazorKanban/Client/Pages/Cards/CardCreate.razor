@attribute [Authorize]
@page "/card/create";
@inject HttpClient Http

<MatDialog @bind-IsOpen="@IsOpen">
    <EditForm Model="@CardModel" OnValidSubmit="SubmitForm">
        <MatDialogTitle>Add new card</MatDialogTitle>
        <p>
            <DataAnnotationsValidator />
            @*<ValidationSummary />*@
        </p>
        <MatDivider></MatDivider>
        <MatDialogContent>
            <p>
                <label for="card-title">Card Title</label>
                <MatTextField Id="card-title" @bind-Value="@CardModel.Title" FullWidth="true"></MatTextField>
                <ValidationMessage For="@(() => CardModel.Title)" />
            </p>
            <p>
                <label for="card-description">Card Description (optional)</label>
                <MatTextField Id="card-description" @bind-Value="@CardModel.Description" FullWidth="true" TextArea="true"></MatTextField>
            </p>
        </MatDialogContent>
        <MatDialogActions>
            <MatButton Type="submit">Save</MatButton>
            <MatButton Type="button" OnClick="Close">Cancel</MatButton>
        </MatDialogActions>
    </EditForm>
</MatDialog>

@code  {
    [Parameter] public string ColumnId { get; set; }

    [Parameter] public long CardsCount { get; set; }

    [Parameter] public EventCallback OnSubmitCallback { get; set; }

    private BlazorKanban.Shared.Card CardModel { get; set; } = new Card();

    private bool IsOpen { get; set; } = false;

    protected override void OnInitialized()
    {
        CardModel = new BlazorKanban.Shared.Card();

        CardModel.ColumnId = ColumnId;
        CardModel.Position = CardsCount + 1;
    }

    public void Open()
    {
        IsOpen = true;

        CardModel = new BlazorKanban.Shared.Card();

        StateHasChanged();
    }

    void Close()
    {
        IsOpen = false;

        CardModel = new BlazorKanban.Shared.Card();
    }

    private async Task SubmitForm()
    {
        CardModel.ColumnId = ColumnId;
        CardModel.Position = CardsCount + 1;

        var response = await Http.PostAsJsonAsync<BlazorKanban.Shared.Card>($"api/taskcards", CardModel);
        response.EnsureSuccessStatusCode();

        CardModel = new BlazorKanban.Shared.Card();

        IsOpen = false;

        await OnSubmitCallback.InvokeAsync(this);
    }
}