@attribute [Authorize]
@inject HttpClient Http
@using BlazorKanban.Client.Pages.Cards

@if (Column == null)
{
    <Loading />
}
else
{
    <MatCard Id="@Column.Id" Class="@Class">
        <MatCardContent>
            <MatAccordion>
                <MatExpansionPanel>
                    <MatExpansionPanelSummary>
                        <MatExpansionPanelHeader>
                            <MatHeadline6>
                                @Column.Title
                            </MatHeadline6>
                        </MatExpansionPanelHeader>
                    </MatExpansionPanelSummary>
                    <MatExpansionPanelDetails>
                        <MatSubtitle2>
                            @Column.Description
                        </MatSubtitle2>
                        <MatButton Icon="@MatIconNames.Edit">Edit</MatButton>
                    </MatExpansionPanelDetails>
                </MatExpansionPanel>
            </MatAccordion>
            <MatBody2>
                <Dropzone Id="@Column.Id" Class="m-3 item-dropzone" Style="DragDropStyle.Custom" Items="Column.Cards" TItem="Card" OnItemDrop="UpdateCard" InstantReplace="true">
                    <CascadingValue Value="@context" @key="@context">
                        <CardContainer />
                    </CascadingValue>
                    @*<CardContainer Card="@context" />*@
                </Dropzone>
            </MatBody2>
        </MatCardContent>
        <MatCardActions>
            <MatCardActionButtons>
                <MatButton @onclick="ShowModal">&nbsp; Add Card</MatButton>
            </MatCardActionButtons>
        </MatCardActions>
    </MatCard>
}

@code {
    bool panelOpenState;

    [CascadingParameter] public Column Column { get; set; }

    [Parameter] public string Class { get; set; }

    private void ShowModal()
    {
        //var parameters = new ModalParameters();
        //parameters.Add(nameof(Card.ColumnId), Column.Id);

        //Modal.Show<CardEdit>($"Create a new Card on {Column.Title}", parameters);

        this.StateHasChanged();
    }

    private void UpdateCard()
    {
        // Update the card with the new column id
    }
}